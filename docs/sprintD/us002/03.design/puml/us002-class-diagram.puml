@startuml Class Diagram - Create Sale CreateSaleAnnouncement

skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline

skinparam classAttributeIconSize 0

class CreateSaleAnnouncementUI {
    - boolean basement
    - boolean loft
    - int numBedrooms
    - int numParkingSpaces
    - int numBathrooms
    - int citizenID
    - int tin
    - int phoneNumber
    - int durationOfContract
    - double area
    - double distance
    - double salePrice
    - double rentalPrice
    - double commissionValue
    - String email
    - String name
    - String state
    - String city
    - String district
    - String street
    - String zip
    - String availableEquipment
    - String businessType
    - String commissionType
    - List<String> photographs
    - List<BusinessType> businessTypes
    - List<SunExposure> sunExposures
    - List<CommissionType> commissionTypes
    - Location location
    - Property property
    - PropertyType propertyType
    - BusinessType businessType
    - SunExposure sunExposure
    - Employee employee
    - Person person
    - Request request
    - Store store
    - getOwnerInfo()
    - getBasicPropertyInfo()
    - getSpecificPropertyInfo()
    - createAdvertisment()
    + run()
    + CreateSaleAnnouncementUI()
}

class CreateSaleAnnouncementController {
    + CreateSaleAnnouncementController()
    + getOwner() : Person
    + getBusinessTypeList() : List<BusinessType>
    + getPropertyTypeList() : List<PropertyType>
    + getSunExposureLocation() : List<SunExposure>
    + getCommissionType() : List<CommissionType>
    + getAgentFromSession() : Employee
    + createProperty(String state, String city, String district,\nString street, String zip, double area, double distance,\nString propertyType, List<String> photograph) : Property
    + createBuilding(String state, String city, String district,\nString street, String zip, double area, double distance,\nString propertyType, List photograph,\nint numBedrooms, int numparkingSpaces,\nint numBathrooms, boolean availableEquipment) : Property
    + createHouse(String state, String city, String district,\nString street, String zip, double area, double distance,\nString propertyType, List photograph,\nint numBedrooms, int numparkingSpaces,\nint numBathrooms, boolean availableEquipment,\nboolean basement, boolean loft, String sunExposure) : Property
    + createRequest(Property property,\nString businessType, double salePrice,\ndouble rentalPrice, int durationOfContract,\nEmployee employee, Person person) : Request
    + createAdvertisment(Person owner, Request request,\nString commissionType, double commissionValue,\nString state, String city, String district,\nString street, String zip, double area, double distance,\nString propertyType, List photograph,\nint numBedrooms, int numparkingSpaces,\nint numBathrooms, boolean availableEquipment,\nboolean basement, boolean loft, String sunExposure) : Advertisement
}

class ApplicationSession {
    + static getInstance()
    + getCurrentSession()
}

class UserSession {
    + getUser()
}

class Repositories {
    - Repositories instance
    - Repositories()
    + Repositories : getInstance()
    + getPersonRepository() : PersonRepository
    + getPropertyRepository() : PropertyRepository
    + getRequestRepository() : RequestRepository
    + getAdvertisementRepository() : AdvertisementRepository
}

class Person {
    - String email
    - String name
    - int passport
    - int tin
    - int phoneNumber
    + Person(String email, int citizenID,\nint tin, int phoneNumber, String name)
    + getPerson(int citizenID) : Person
    + getPerson(Email email) : Person
}

class Employee {
    - String role
}

enum SunExposure {
    - String description
    + getSunExposure() : String
}

interface Location {
    + getStreet() : String
    + getZip() : String
    + getState() : String
    + getCity() : String
    + getDistrict() : String
    + getLocation() : String
    + setStreet(String street)
    + setZip(String zip)
    + setState(String state)
    + setCity(String city)
    + setDistrict(String district)
    + setLocation(String street, String zip,
    String state, String city, String district)
    + validateZip(String zip)
    + validateLocation(String zip, String street,\nString state, String city, String district)
    + locationToString() : String
}

interface Property {
    + getArea() : double
    + getDistance() : double
    + getPropertyType() : String
    + getPhotographs() : List<String>
    + validatePropertyArguments(PropertyType propertyType,
    double area, double distance, List<String> photographs)
    + validPropertyType(PropertyType propertyType) : boolean
    + validatePhotos(List<String> photographs) : boolean
}

class Land {
    - String state
    - String city
    - String district
    - String street
    - String zip
    - double area
    - double distance
    - List<String> photographs
}

class Apartment {
    - String state
    - String city
    - String district
    - String street
    - String zip
    - double area
    - double distance
    - List<String> photographs
    - int numberBedrooms
    - int numberBathrooms
    - int numberParking
    - String availableEquipment
}

class House {
    - String state
    - String city
    - String district
    - String street
    - String zip
    - double area
    - double distance
    - List<String> photographs
    - int numberBedrooms
    - int numberBathrooms
    - int numberParking
    - String availableEquipment
    - boolean basement
    - boolean loft
    - SunExposure sunExposure
}

enum BusinessType {
    - String description
    + getBusinessType() : String
}

interface Request {
    + getProperty() : Property
    + getBusinessType() : String
    + getOwner() : Person
    + getAgent() : Employee
    + getDate() : Date
    + validateRequest(Property property, BusinessType businessType,\nPerson owner, Employee agent, double... args) : boolean
    + confirmBusinessType(BusinessType businessType): boolean
}

class RequestSale {
    - double salePrice
    - Date date
    - BusinessType businessType
    - Property property
    - Employee employee
    - Person person
}

class RequestLease {
    - double rentalPrice
    - int durationOfContract
    - Date date
    - BusinessType businessType
    - Property property
    - Employee employee
    - Person person
}

enum CommissionType {
    - String description
    + getCommissionType() : String
}

class Advertisement {
    - Request request
    - Date date
    - CommissionType commissionType
    - double commissionValue
    + Advertisement(Request request,\nCommissionType commissionType,\ndouble commissionValue)
}

class PersonRepository {
    - List <Person> personList
    + getPersonByEmail(String email) : Person
}

class RequestRepository {
    - List<Request> requestList
    + getRequestList() : List<Request>
    + removeRequest(request)
}

class AdvertisementRepository {
    - List<Advertisement> advertisementList
    + createAdvertisement(Request request,\nCommissionType commissionType,\ndouble commissionValue)
}

class SMS {
    + notifyPropertyListing(agentName,\nagentPhoneNumber, personPhoneNumber,\nadvertisement)
}

ApplicationSession --> "1" UserSession

CreateSaleAnnouncementUI .> CreateSaleAnnouncementController : controller

CreateSaleAnnouncementController .> Repositories : repositories
CreateSaleAnnouncementController ...> ApplicationSession
CreateSaleAnnouncementController ...> UserRepository : userRepository
CreateSaleAnnouncementController ...> PersonRepository : personRepository
CreateSaleAnnouncementController ...> PropertyRepository : propertyRepository
CreateSaleAnnouncementController ...> RequestRepository : requestRepository
CreateSaleAnnouncementController ...> AdvertisementRepository : advertisementRepository

Repositories --> Repositories : instance
Repositories --> "1" UserRepository
Repositories --> "1" PersonRepository
Repositories --> "1" PropertyRepository
Repositories --> "1" RequestRepository
Repositories --> "1" AdvertisementRepository

UserRepository --> "*" User
PersonRepository --> "*" Person
PropertyRepository --> "*" Property
RequestRepository --> "*" Request
AdvertisementRepository --> "*" Advertisement

Person <|-- Employee

Location <|.. Land
Location <|.. Apartment
Location <|.. House

Property <|.. Land
Property <|.. Apartment
Property <|.. House

Request <|.. RequestLease
Request <|.. RequestSale

House --> "0..1" SunExposure

Request --> "1" BusinessType
Request --> "1" Property

Advertisement --> "1" Request
Advertisement --> "1" CommissionType

Advertisement <- Employee: creates
Employee -> Request : approves
Employee --> "*" SMS : sends
Request -> Person : created by

@enduml